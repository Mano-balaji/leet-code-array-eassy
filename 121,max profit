#include<iostream>
#include <algorithm>
using namespace std; 
class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int maxpro=0;
        for(int i=0;i<prices.size();i++){
            for(int j=i+1;j<prices.size();j++){
                if(prices[i]>prices[j]){
                    break;
                }else{
                    int n=prices[j]-prices[i];
                    maxpro=max(maxpro,n);
                }
            }
        }
        return maxpro;
    }
};



//best apporach


#include<iostream>
#include <algorithm>
using namespace std; 
class Solution {
public:
    int maxProfit(vector<int>& prices) {
       int min_price=prices[0];
       int max_profit=0;

       for(int i=1;i<prices.size();i++){
        int potential_pro=prices[i]-min_price;
        max_profit=max(max_profit,potential_pro);
        min_price=min(prices[i],min_price);
       } 
    return max_profit;
    } 
};
